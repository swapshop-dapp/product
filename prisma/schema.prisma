generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                    Int       @id @default(autoincrement())
  userId                Int       @default(autoincrement()) @map("user_id")
  walletId              String?   @map("wallet_id") @db.VarChar(255)
  status                String?   @map("status") @db.VarChar(100)
  title                 String?   @map("title") @db.VarChar(255)
  description           String?   @map("description") @db.Text
  address               Json?     @map("address") @db.JsonB
  contact               Json?     @map("contact") @db.JsonB
  policies              Json?     @map("policies") @db.JsonB
  timezone              String?   @map("timezone") @db.VarChar(255)
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @default(now()) @updatedAt @map("updated_at")
  factoryContract       String?   @map("factory_contract") @db.VarChar(255)
  productContract       String?   @map("product_contract") @db.VarChar(255)
  deployStatus          String?   @default("new") @map("deploy_status") @db.VarChar(100)
  deployedAt            DateTime? @map("deployed_at")
  thumbnail             String?   @map("thumbnail") @db.VarChar(255)
  paymentReceiverWallet String?   @map("payment_receiver_wallet") @db.VarChar(255)

  productImages    ProductImage[]
  productContracts ProductContract[]
  productReview    ProductReview[]

  @@index([userId, walletId, status])
  @@index([factoryContract])
  @@index([productContract])
  @@index([deployStatus])
  @@index([address])
  @@map("products")
}

model ProductContract {
  id              Int       @id @default(autoincrement())
  productId       Int       @map("product_id")
  factoryContract String?   @map("factory_contract") @db.VarChar(255)
  productContract String?   @map("product_contract") @db.VarChar(255)
  deployStatus    String?   @default("new") @map("deploy_status") @db.VarChar(100)
  deployedAt      DateTime? @map("deployed_at")
  networks        String?   @map("networks") @db.VarChar(100)
  chainId         Int?      @map("chain_id") @db.Integer

  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, networks, chainId])
  @@index([productId, deployStatus, networks, chainId])
  @@map("product_contract")
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  productId  Int      @map("product_id")
  caption    String?  @map("caption") @db.Text
  url        String   @map("url") @db.VarChar(255)
  sortOrder  Int?     @map("sort_order") @db.Integer
  pmsImageId String?  @map("pms_image_id") @db.VarChar(100)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")

  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, pmsImageId])
  @@map("product_image")
}

model ContractFactory {
  id        Int      @id @default(autoincrement())
  address   String   @db.VarChar(255)
  version   String   @db.VarChar(100)
  isActive  Boolean  @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("contract_factory")
}

model ProductReview {
  id             Int       @id @default(autoincrement())
  buyerId        String?   @map("buyer_id") @db.VarChar(1000)
  productId      Int       @map("product_id")
  type           String?   @db.VarChar(255)
  pmsType        String?   @map("pms_type") @db.VarChar(255)
  rating         Float     @map("rating")
  reviewCategory Json?     @map("review_category")
  review         String?   @map("review") @db.VarChar(10000)
  submittedAt    DateTime? @map("submitted_at")
  sellerName     String?   @map("seller_name") @db.VarChar(255)
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @default(now()) @map("updated_at")
  status         String    @map("status") @db.VarChar(255)

  product Product @relation(fields: [productId], references: [id])

  @@index([productId, status, rating, submittedAt, type])
  @@map("product_review")
}

model Category {
  id     Int    @id @default(autoincrement())
  name   Int    @map("name")
  status String @map("status") @db.VarChar(255)

  @@unique([name])
  @@map("category")
}
